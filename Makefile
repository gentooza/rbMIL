#############################################################################
# Makefile for building: rb1000
# Generated by qmake (2.01a) (Qt 4.8.6) on: jue abr 30 11:27:19 2015
# Project:  rb1000.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile rb1000.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/opt/pvb/pvserver -I/opt/pvb/rllib/lib -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu /usr/lib/libpvsmt.so -lsqlite3 /usr/lib/librllib.so -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = alarm.cpp \
		piUsrMgnt.cc \
		main.cpp \
		mask7.cpp \
		mask6.cpp \
		mask5.cpp \
		mask4.cpp \
		mask3.cpp \
		mask2.cpp \
		mask1.cpp 
OBJECTS       = alarm.o \
		piUsrMgnt.o \
		main.o \
		mask7.o \
		mask6.o \
		mask5.o \
		mask4.o \
		mask3.o \
		mask2.o \
		mask1.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		rb1000.pro
QMAKE_TARGET  = rb1000
DESTDIR       = 
TARGET        = rb1000

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: rb1000.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile rb1000.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile rb1000.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/rb10001.0.0 || $(MKDIR) .tmp/rb10001.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/rb10001.0.0/ && $(COPY_FILE) --parents alarm.h piUsrMgnt.h pvapp.h mask7_slots.h mask6_slots.h mask5_slots.h mask4_slots.h mask3_slots.h mask2_slots.h mask1_slots.h .tmp/rb10001.0.0/ && $(COPY_FILE) --parents alarm.cpp piUsrMgnt.cc main.cpp mask7.cpp mask6.cpp mask5.cpp mask4.cpp mask3.cpp mask2.cpp mask1.cpp .tmp/rb10001.0.0/ && (cd `dirname .tmp/rb10001.0.0` && $(TAR) rb10001.0.0.tar rb10001.0.0 && $(COMPRESS) rb10001.0.0.tar) && $(MOVE) `dirname .tmp/rb10001.0.0`/rb10001.0.0.tar.gz . && $(DEL_FILE) -r .tmp/rb10001.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

alarm.o: alarm.cpp alarm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o alarm.o alarm.cpp

piUsrMgnt.o: piUsrMgnt.cc piUsrMgnt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o piUsrMgnt.o piUsrMgnt.cc

main.o: main.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mask7.o: mask7.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h \
		mask7_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask7.o mask7.cpp

mask6.o: mask6.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h \
		mask6_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask6.o mask6.cpp

mask5.o: mask5.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h \
		mask5_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask5.o mask5.cpp

mask4.o: mask4.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h \
		mask4_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask4.o mask4.cpp

mask3.o: mask3.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h \
		mask3_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask3.o mask3.cpp

mask2.o: mask2.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h \
		mask2_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask2.o mask2.cpp

mask1.o: mask1.cpp pvapp.h \
		alarm.h \
		piUsrMgnt.h \
		mask1_slots.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mask1.o mask1.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

